name: Build and Publish

on:
  push:
    tags:
      - v*.*.*

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Get tag
        id: source_tag
        run: |
          echo "SOURCE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          registry-url: 'https://npm.pkg.github.com'
          always-auth: true
          scope: '@mobiusflow'

      - name: Build
        run: mkdir -p chirpstack-docker &&
          cp -r ./configuration ./chirpstack-docker/configuration &&
          cp docker-compose.yml ./chirpstack-docker/docker-compose.yml &&
          cp -r mosquitto_passwd ./chirpstack-docker/mosquitto_passwd &&
          zip -r chirpstack-docker.zip ./chirpstack-docker
        env:
          GH_PKG_READ_TOKEN: ${{ secrets.GH_PKG_READ_TOKEN }}
          NPM_READ_TOKEN: ${{ secrets.NPM_READ_TOKEN }}

      - name: Create release
        id: create_release
        env:
          RELEASE_TYPE: ${{ contains(steps.source_tag.outputs.SOURCE_TAG, '-') }}
          RELEASE_TAG: ${{ steps.source_tag.outputs.SOURCE_TAG }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.MOBIUS_ACTION_TOKEN }}
          script: |
            try {
              await github.rest.repos.createRelease({
                draft: false,
                generate_release_notes: true,
                name: process.env.RELEASE_TAG,
                owner: context.repo.owner,
                prerelease: process.env.RELEASE_TYPE === 'true',
                repo: context.repo.repo,
                tag_name: process.env.RELEASE_TAG,
              });
            } catch (error) {
              core.setFailed(error.message);
            }

      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.3
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./chirpstack-docker.zip
          asset_name: chirpstack-docker.zip
          asset_content_type: application/zip
